general:
    common_entity_attributes:
        - name: number
          type: int
    mandatory_components:
        - Mandatory

messages:
    Heal:
        - name: amount
          type: int
    Damage:
        - name: amount
          type : int
    Die:
    Foo1:
        - name: value
          type: float
    Foo2:
    Foo3:

components:
    Mandatory:

    Health:
        messages:
            - Heal
            - Damage
        parameters:
            maxHealth: int
            startHealth: int

    Loot:
        messages:
            - Die

    Dependency:
        parameters:
            # Keep in alphabetic order
            defaultSet: int             # should be 0
            dependentForcesUserSet: int # should be set by user
            dependentOverwrites: int    # should be 1
            dependentSet: int           # should be 1
            entityForcesUserSet: int    # should be set by user
            entityOverwrites: int       # should be 2
            entityOverwritesTwice: int  # should be 2
            entitySet: int              # should be 2
            userSet: int                # should be set by user
        defaults:
            defaultSet: 0
            dependentForcesUserSet: 0
            dependentOverwrites: 0
            entityOverwrites: 0
            entityOverwritesTwice: 0
            entityForcesUserSet: 0

    AnotherDependency:

    Depender:
        requires:
            Dependency:
                dependentSet: 1
                dependentForcesUserSet: null
                dependentOverwrites: 1
                entityOverwritesTwice: 1
                entityForcesUserSet: 1
            AnotherDependency:

    DependerOnDepender:
        requires:
            Depender:

    TypeTest1:
        parameters:
            aConstant: int
            aString:   const char*
            anInt:     int
            aBool:     bool
        defaults:
            aConstant: __LINE__
            aString:   '"I am a string"'
            anInt:     23
            aBool:     true

    TypeTest2:
        requires:
            TypeTest1:
                aConstant: __LINE__
                aString:   '"I am a string literal"'
                anInt:     23
                aBool:     true

entities:
    MessageTest:
        components:
            Health:
                maxHealth: 100
                startHealth: 75
            Loot:

    DependencyTest:
        components:
            Depender:
            Dependency:
                entitySet: 2
                entityOverwrites: 2
                entityOverwritesTwice: 2
                entityForcesUserSet: null

    TypeTest1:
        components:
            TypeTest1:

    TypeTest2:
        components:
            TypeTest2:

    TypeTest3:
        components:
            TypeTest1:
                aConstant: __LINE__
                someCode:  '&*yaml::conflicting::symbols[0]'
                aString:   '"I am a string literal"'
                aChar:     "'a'"
                anInt:     23
                aBool:     true

# vi:ts=4:et:ai
